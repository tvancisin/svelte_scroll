{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Divider.svelte",
    "Filler.svelte",
    "Header.svelte",
    "Media.svelte",
    "ONSFooter.svelte",
    "ONSHeader.svelte",
    "Scroller.svelte",
    "Arrow.svelte",
    "Dropdown.svelte",
    "Em.svelte",
    "Toggle.svelte",
    "Area.svelte",
    "Bars.svelte",
    "Beeswarm.svelte",
    "Donut.svelte",
    "Globe.svelte"
  ],
  "sourcesContent": [
    "<script>\n\t// CORE IMPORTS\n\timport { setContext, onMount } from \"svelte\";\n\timport { getCSV, getMotion } from \"./utils.js\";\n\timport { themes } from \"./config.js\";\n\timport ONSHeader from \"./layout/ONSHeader.svelte\";\n\timport ONSFooter from \"./layout/ONSFooter.svelte\";\n\timport Header from \"./layout/Header.svelte\";\n\timport Section from \"./layout/Section.svelte\";\n\timport Media from \"./layout/Media.svelte\";\n\timport Scroller from \"./layout/Scroller.svelte\";\n\timport Filler from \"./layout/Filler.svelte\";\n\timport Divider from \"./layout/Divider.svelte\";\n\timport Toggle from \"./ui/Toggle.svelte\";\n\timport Arrow from \"./ui/Arrow.svelte\";\n\timport Em from \"./ui/Em.svelte\";\n\timport Dropdown from \"./ui/Dropdown.svelte\";\n\timport * as d3 from \"d3\";\n\timport Beeswarm from \"./vis/Beeswarm.svelte\";\n\timport Area from \"./vis/Area.svelte\";\n\timport Donut from \"./vis/Donut.svelte\";\n\timport Bars from \"./vis/Bars.svelte\";\n\timport Globe from \"./vis/Globe.svelte\";\n\n\t// DEMO-SPECIFIC IMPORTS\n\timport bbox from \"@turf/bbox\";\n\timport { setColors, getGeo } from \"./utils.js\";\n\n\tlet width, height;\n\tlet mapLoaded = false;\n\n\tlet selectedCountry = \"Russia\";\n\n\t// CORE CONFIG (COLOUR THEMES)\n\t// Set theme globally (options are 'light', 'dark' or 'lightblue')\n\tlet theme = \"light\";\n\tsetContext(\"theme\", theme);\n\tsetColors(themes, theme);\n\n\t// CONFIG FOR SCROLLER COMPONENTS\n\t// Config\n\tconst threshold = 0.65;\n\t// State\n\tlet animation = getMotion(); // Set animation preference depending on browser preference\n\tlet id = {}; // Object to hold visible section IDs of Scroller components\n\tlet idPrev = {}; // Object to keep track of previous IDs, to compare for changes\n\tonMount(() => {\n\t\tidPrev = { ...id };\n\t});\n\n\t// DEMO-SPECIFIC CONFIG\n\t// Constants\n\tconst datasets = [\"region\", \"district\"];\n\tconst topojson = \"./data/geo_lad2021.json\";\n\n\tconst mapstyle =\n\t\t\"https://bothness.github.io/ons-basemaps/data/style-omt.json\";\n\tconst mapbounds = {\n\t\tuk: [\n\t\t\t[-9, 49],\n\t\t\t[2, 61],\n\t\t],\n\t};\n\n\t// Data\n\tlet data = { district: {}, region: {} };\n\tlet metadata = { district: {}, region: {} };\n\tlet geojson;\n\n\t// Element bindings\n\tlet map = null; // Bound to mapbox 'map' instance once initialised\n\n\t// State\n\tlet hovered; // Hovered district (chart or map)\n\tlet selected; // Selected district (chart or map)\n\t$: region =\n\t\tselected && metadata.district.lookup\n\t\t\t? metadata.district.lookup[selected].parent\n\t\t\t: null; // Gets region code for 'selected'\n\t$: chartHighlighted =\n\t\tmetadata.district.array && region\n\t\t\t? metadata.district.array\n\t\t\t\t\t.filter((d) => d.parent == region)\n\t\t\t\t\t.map((d) => d.code)\n\t\t\t: []; // Array of district codes in 'region'\n\tlet mapHighlighted = []; // Highlighted district (map only)\n\tlet xKey = \"area\"; // xKey for scatter chart\n\tlet yKey = null; // yKey for scatter chart\n\tlet zKey = null; // zKey (color) for scatter chart\n\tlet rKey = null; // rKey (radius) for scatter chart\n\tlet mapKey = \"density\"; // Key for data to be displayed on map\n\tlet explore = false; // Allows chart/map interactivity to be toggled on/off\n\n\t// FUNCTIONS (INCL. SCROLLER ACTIONS)\n\n\t// Functions for chart and map on:select and on:hover events\n\tfunction doSelect(e) {\n\t\tconsole.log(e);\n\t\tselected = e.detail.id;\n\t\tif (e.detail.feature) fitById(selected); // Fit map if select event comes from map\n\t}\n\tfunction doHover(e) {\n\t\thovered = e.detail.id;\n\t}\n\n\t// Functions for map component\n\tfunction fitBounds(bounds) {\n\t\tif (map) {\n\t\t\tmap.fitBounds(bounds, { animate: animation, padding: 30 });\n\t\t}\n\t}\n\tfunction fitById(id) {\n\t\tif (geojson && id) {\n\t\t\tlet feature = geojson.features.find(\n\t\t\t\t(d) => d.properties.AREACD == id,\n\t\t\t);\n\t\t\tlet bounds = bbox(feature.geometry);\n\t\t\tfitBounds(bounds);\n\t\t}\n\t}\n\n\tlet step = null;\n\n\t// Actions for Scroller components\n\tconst actions = {\n\t\tmap: {\n\t\t\t// Actions for <Scroller/> with id=\"map\"\n\t\t\tmap01: () => {\n\t\t\t\t// fitBounds(mapbounds.uk);\n\t\t\t\t// mapKey = \"density\";\n\t\t\t\t// mapHighlighted = [];\n\t\t\t\t// explore = false;\n\t\t\t},\n\t\t\tmap02: () => {\n\t\t\t\tif (selectedCountry == \"Russia\") {\n\t\t\t\t\tmap.flyTo({\n\t\t\t\t\t\tcenter: [70, 40],\n\t\t\t\t\t\tessential: true, // this animation is considered essential with respect to prefers-reduced-motion\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (selectedCountry == \"China\") {\n\t\t\t\t\tmap.flyTo({\n\t\t\t\t\t\tcenter: [100, 20],\n\t\t\t\t\t\tessential: true, // this animation is considered essential with respect to prefers-reduced-motion\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// fitBounds(mapbounds.uk);\n\t\t\t\t// mapKey = \"age_med\";\n\t\t\t\t// mapHighlighted = [];\n\t\t\t\t// explore = false;\n\t\t\t},\n\t\t},\n\t\tchart: {\n\t\t\tchart01: () => {\n\t\t\t\tstep = \"one\";\n\t\t\t},\n\t\t\tchart02: () => {\n\t\t\t\tstep = \"two\";\n\t\t\t},\n\t\t\tchart03: () => {\n\t\t\t\tstep = \"three\";\n\t\t\t},\n\t\t},\n\t\tarea: {\n\t\t\tarea01: () => {\n\t\t\t\tconsole.log(\"area\");\n\t\t\t},\n\t\t},\n\t\tdonut: {\n\t\t\tdonut01: () => {\n\t\t\t\tconsole.log(\"donut\");\n\t\t\t},\n\t\t},\n\t\tbar: {\n\t\t\tbar01: () => {\n\t\t\t\tconsole.log(\"bar1\");\n\t\t\t},\n\t\t\tbar02: () => {\n\t\t\t\tconsole.log(\"bar2\");\n\t\t\t},\n\t\t\tbar03: () => {\n\t\t\t\tconsole.log(\"bar3\");\n\t\t\t},\n\t\t},\n\t};\n\n\t// Code to run Scroller actions when new caption IDs come into view\n\tfunction runActions(codes = []) {\n\t\tcodes.forEach((code) => {\n\t\t\tif (id[code] != idPrev[code]) {\n\t\t\t\tif (actions[code][id[code]]) {\n\t\t\t\t\tactions[code][id[code]]();\n\t\t\t\t}\n\t\t\t\tidPrev[code] = id[code];\n\t\t\t}\n\t\t});\n\t}\n\n\t$: id && runActions(Object.keys(actions)); // Run above code when 'id' object changes\n\n\t//LOAD GEOJSON\n\tlet mygeojson;\n\tconst myjson_path = \"./data/all_countries.json\";\n\tgetGeo(myjson_path).then((geo) => {\n\t\tmygeojson = geo;\n\t});\n\n\t//change date format to GMT\n\tlet parser = d3.timeParse(\"%Y-%m-%d\");\n\tlet just_year_parser = d3.timeParse(\"%Y\");\n\tlet russia, china;\n\n\tlet beeswarm_data;\n\tlet russia_beeswarm_data;\n\tlet china_beeswarm_data;\n\n\tlet donut_data;\n\tlet russia_donut;\n\tlet china_donut;\n\n\tlet barchart_data;\n\tlet russia_barchart_data;\n\tlet china_barchart_data;\n\n\tlet areachart_data;\n\tlet linechart_data = [];\n\n\tlet path = [\n\t\t\"./data/agts_rus_china.csv\",\n\t\t\"./data/paax_practical_third_labelled_signatories.csv\",\n\t];\n\n\tgetCSV(path).then((data) => {\n\t\t//prepare data for beeswarm\n\t\tlet bees = data[0];\n\n\t\tbees.forEach(function (d) {\n\t\t\td.AgtId = +d.AgtId;\n\t\t\td.dat = d.date;\n\t\t\td.date = parser(d.date);\n\t\t});\n\n\t\tlet four_group = d3.groups(bees, (d) => d.global_actor);\n\t\trussia = four_group[0][1];\n\t\tchina = four_group[1][1];\n\n\t\tlet year_division_russia = d3.groups(\n\t\t\trussia,\n\t\t\t(d) => d.AgtId,\n\t\t\t(d) => d.date,\n\t\t);\n\t\tyear_division_russia.sort(function (x, y) {\n\t\t\treturn d3.ascending(x[1][0][0], y[1][0][0]);\n\t\t});\n\n\t\tlet year_division_china = d3.groups(\n\t\t\tchina,\n\t\t\t(d) => d.AgtId,\n\t\t\t(d) => d.date,\n\t\t);\n\t\tyear_division_china.sort(function (x, y) {\n\t\t\treturn d3.ascending(x[1][0][0], y[1][0][0]);\n\t\t});\n\n\t\trussia_beeswarm_data = year_division_russia;\n\t\tchina_beeswarm_data = year_division_china;\n\n\t\tbeeswarm_data = russia_beeswarm_data; // final beeswarm data\n\n\t\t//prepare data for area chart\n\t\tlet area = data[1];\n\n\t\tlet all_year_agt = d3.groups(\n\t\t\tarea,\n\t\t\t(d) => +d.year,\n\t\t\t(d) => d.AgtId,\n\t\t);\n\n\t\tall_year_agt.sort(function (x, y) {\n\t\t\treturn d3.ascending(x[0], y[0]);\n\t\t});\n\n\t\tlet all_sorted = [];\n\n\t\tall_year_agt.forEach(function (d) {\n\t\t\tall_sorted.push({\n\t\t\t\tdate: just_year_parser(d[0]),\n\t\t\t\tvalue: d[1].length,\n\t\t\t});\n\t\t});\n\n\t\tareachart_data = all_sorted; // final areachart_data\n\n\t\t//prepare data for linechart\n\t\tconst act_group = d3.groups(\n\t\t\tbees,\n\t\t\t(d) => d.global_actor,\n\t\t\t(d) => +d.year,\n\t\t\t(d) => d.AgtId,\n\t\t);\n\t\tact_group.forEach(function (d) {\n\t\t\td[1].sort(function (x, y) {\n\t\t\t\treturn d3.ascending(x[0], y[0]);\n\t\t\t});\n\t\t});\n\n\t\tact_group.forEach(function (d) {\n\t\t\td[1].forEach(function (m) {\n\t\t\t\tlinechart_data.push({\n\t\t\t\t\t// final linechart data\n\t\t\t\t\tdivision: d[0],\n\t\t\t\t\tdate: just_year_parser(m[0]),\n\t\t\t\t\tunemployment: m[1].length,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t//prepare data for donut chart\n\t\trussia_donut = d3.groups(\n\t\t\trussia,\n\t\t\t(d) => d.stage_label,\n\t\t\t(d) => d.AgtId,\n\t\t);\n\t\tchina_donut = d3.groups(\n\t\t\tchina,\n\t\t\t(d) => d.stage_label,\n\t\t\t(d) => d.AgtId,\n\t\t);\n\n\t\tdonut_data = russia_donut;\n\n\t\t//prepare data for bar chart\n\t\t//generate objects with percentages\n\t\tconst object_calc = function (data) {\n\t\t\tlet totalagts = 0;\n\t\t\tdata.forEach(function (d) {\n\t\t\t\ttotalagts += d[1].length;\n\t\t\t});\n\t\t\tlet all_percent_object = [];\n\t\t\tdata.forEach(function (d) {\n\t\t\t\tall_percent_object.push({\n\t\t\t\t\tstage: d[0],\n\t\t\t\t\tpercentage: (d[1].length / totalagts) * 100,\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn all_percent_object;\n\t\t};\n\t\tlet ru_stage_agt = d3.groups(\n\t\t\trussia,\n\t\t\t(d) => d.stage_label,\n\t\t\t(d) => d.AgtId,\n\t\t);\n\t\tlet cn_stage_agt = d3.groups(\n\t\t\tchina,\n\t\t\t(d) => d.stage_label,\n\t\t\t(d) => d.AgtId,\n\t\t);\n\t\tconst all_stage_agt = d3.groups(\n\t\t\tarea,\n\t\t\t(d) => d.stage_label,\n\t\t\t(d) => d.AgtId,\n\t\t);\n\t\tlet all_percent_bar = object_calc(all_stage_agt);\n\t\tlet ru_percent_bar = object_calc(ru_stage_agt);\n\t\tlet cn_percent_bar = object_calc(cn_stage_agt);\n\n\t\t//prepare barchart data\n\t\tconst ru_comb_chart = all_percent_bar.map((obj1) => {\n\t\t\tconst obj2 = ru_percent_bar.find(\n\t\t\t\t(obj2) => obj2.stage === obj1.stage,\n\t\t\t);\n\t\t\treturn { ...obj1, chart_data: obj2 ? obj2.percentage : 0 };\n\t\t});\n\n\t\tconst cn_comb_chart = all_percent_bar.map((obj1) => {\n\t\t\tconst obj2 = cn_percent_bar.find(\n\t\t\t\t(obj2) => obj2.stage === obj1.stage,\n\t\t\t);\n\t\t\treturn { ...obj1, chart_data: obj2 ? obj2.percentage : 0 };\n\t\t});\n\n\t\t// Renamed attribute names\n\t\tconst ru_fin_comb_chart = ru_comb_chart.map((obj) => ({\n\t\t\tgroup: obj.stage,\n\t\t\tAll: obj.percentage,\n\t\t\tRussia: obj.chart_data,\n\t\t}));\n\t\tconst cn_fin_comb_chart = cn_comb_chart.map((obj) => ({\n\t\t\tgroup: obj.stage,\n\t\t\tAll: obj.percentage,\n\t\t\tChina: obj.chart_data,\n\t\t}));\n\n\t\t//fix names of subgroups\n\t\tru_fin_comb_chart.forEach((obj) => {\n\t\t\tif (obj.group === \"Framework-substantive, partial\") {\n\t\t\t\tobj.group = \"Partial\";\n\t\t\t} else if (obj.group === \"Framework-substantive, comprehensive\") {\n\t\t\t\tobj.group = \"Comprehensive\";\n\t\t\t}\n\t\t});\n\n\t\tcn_fin_comb_chart.forEach((obj) => {\n\t\t\tif (obj.group === \"Framework-substantive, partial\") {\n\t\t\t\tobj.group = \"Partial\";\n\t\t\t} else if (obj.group === \"Framework-substantive, comprehensive\") {\n\t\t\t\tobj.group = \"Comprehensive\";\n\t\t\t}\n\t\t});\n\n\t\trussia_barchart_data = ru_fin_comb_chart;\n\t\tchina_barchart_data = cn_fin_comb_chart;\n\n\t\tbarchart_data = russia_barchart_data;\n\t});\n\n\tfunction handleCountry(country) {\n\t\tif (country.detail == \"Russia\") {\n\t\t\tbeeswarm_data = russia_beeswarm_data;\n\t\t\tdonut_data = russia_donut;\n\t\t\tbarchart_data = russia_barchart_data;\n\t\t} else {\n\t\t\tbeeswarm_data = china_beeswarm_data;\n\t\t\tdonut_data = china_donut;\n\t\t\tbarchart_data = china_barchart_data;\n\t\t}\n\t}\n\n\t//clicking on screen or button after map is loaded\n\tfunction handleMapLoaded() {\n\t\tmapLoaded = true;\n\t\tdocument.getElementById(\"loading_text\").style.visibility = \"hidden\";\n\t\tdocument.getElementById(\"loading_button\").style.visibility = \"visible\";\n\t}\n\n\tfunction handleScreenClick(event) {\n\t\t// Recalculate width and height\n\t\twidth = window.innerWidth;\n\t\theight = window.innerHeight;\n\n\t\tif (mapLoaded) {\n\t\t\tdocument.getElementById(\"loading_screen\").remove();\n\t\t\tdocument.body.style.overflow = \"visible\";\n\t\t}\n\t}\n</script>\n\n<ONSHeader center={false} />\n\n<Dropdown on:close={handleCountry} bind:selectedCountry />\n\n<div\n\tbind:clientWidth={width}\n\tbind:clientHeight={height}\n\trole=\"presentation\"\n\tid=\"loading_screen\"\n\tstyle=\"height: calc(var(--vh, 1vh) * 100);\"\n\ton:click={handleScreenClick}\n>\n\t<button id=\"loading_button\" on:click={handleScreenClick}\n\t\t>Visualization</button\n\t>\n\t<p id=\"loading_text\">loading...</p>\n</div>\n\n<Header\n\tbgcolor=\"white\"\n\tbgfixed={true}\n\ttheme=\"light\"\n\tcenter={true}\n\tshort={false}\n>\n\t<h1>PeaceRep</h1>\n\t<p class=\"text-big\" style=\"margin-top: 5px\">\n\t\tThird-Party Actors in Peace Agreements\n\t</p>\n\t<div style=\"margin-top: 90px;\">\n\t\t<Arrow color=\"black\" {animation}>Scroll to begin</Arrow>\n\t</div>\n</Header>\n\n<Filler theme=\"light\" short={true} wide={true} center={true}>\n\t<p class=\"text-big\">Timeline of Agreements</p>\n</Filler>\n\n<Scroller {threshold} bind:id={id[\"chart\"]} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t{#if beeswarm_data}\n\t\t\t\t\t<div class=\"chart\">\n\t\t\t\t\t\t<Beeswarm\n\t\t\t\t\t\t\t{beeswarm_data}\n\t\t\t\t\t\t\t{just_year_parser}\n\t\t\t\t\t\t\t{selectedCountry}\n\t\t\t\t\t\t\t{step}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"chart01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t{#if selectedCountry === \"Russia\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tRussia is the second most prolific international\n\t\t\t\t\t\tthird-party signatory of peace agreements between\n\t\t\t\t\t\t1990-2022. It follows the United Nations, and comes\n\t\t\t\t\t\tahead of the United States, the African Union, and the\n\t\t\t\t\t\tEuropean Union.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"dot\"></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Individual peace agreements signed by Russia (hover\n\t\t\t\t\t\t\tover for more detail)</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{:else if selectedCountry === \"China\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tChina is not the most prolific third-party signatory of\n\t\t\t\t\t\tpeace agreements since 1990, ranking 15th of all actors,\n\t\t\t\t\t\twho have acted as third-party signatories. In terms of\n\t\t\t\t\t\tfrequency, this puts it alongside actors such as Egypt,\n\t\t\t\t\t\tKenya, and Nigeria.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"dot\"></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Individual peace agreements signed by China (hover\n\t\t\t\t\t\t\tover for more detail)</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</section>\n\n\t\t<section data-id=\"chart02\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t{#if selectedCountry === \"Russia\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tRussia has most often acted as a third-party signatory\n\t\t\t\t\t\tin the 1990s. Majority of these agreements relate to the\n\t\t\t\t\t\tdissolution of the Soviet Union. Many of these are\n\t\t\t\t\t\tprotracted conflicts, where Russia continues acting as a\n\t\t\t\t\t\tthird - party signatory of peace agreements.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"dot\" style=\"background-color: red;\"></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Peace agreements addressing conflicts in the former\n\t\t\t\t\t\t\tSoviet Union territories.</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{:else if selectedCountry === \"China\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAs one of the UN Security Council (UNSC) permanent\n\t\t\t\t\t\tmembers, China has participated in all major\n\t\t\t\t\t\tinternational conferences (e.g., for Cambodia, Bosnia\n\t\t\t\t\t\tand Herzegovina, Afghanistan, Libya), with the key\n\t\t\t\t\t\texception of negotiations relating to Israel and\n\t\t\t\t\t\tPalestine. Nearly all agreements signed by China as a\n\t\t\t\t\t\tthird-party have been the result of large international\n\t\t\t\t\t\tconferences or UNSC resolutions.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"dot\" style=\"background-color: red;\"></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Peace agreements resulting from large international\n\t\t\t\t\t\t\tconferences or UNSC resolutions.</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"chart03\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t{#if selectedCountry === \"Russia\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tOver the last decade, Russia increasingly acts as a\n\t\t\t\t\t\tsignatory on agreements related to conflicts in Syria\n\t\t\t\t\t\tand, reflecting its increased engagements in Africa:\n\t\t\t\t\t\tLibya, and the Central African Republic. These are\n\t\t\t\t\t\tinternationalised conflicts, where Russia is also\n\t\t\t\t\t\tmilitarily engaged in supporting conflict parties.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"dot\" style=\"background-color: red;\"></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Peace agreements addressing conflicts in Syria,\n\t\t\t\t\t\t\tLibya, and the Central African Republic.</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{:else if selectedCountry === \"China\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMost agreements China has signed include the UN or other\n\t\t\t\t\t\tpermanent members of the UN Security Council.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"dot\" style=\"background-color: red;\"></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Peace agreements signed by China and the UN or all\n\t\t\t\t\t\t\tother permanent members of the UNSC.</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Filler theme=\"light\" short={true} wide={true} center={true}>\n\t<p class=\"text-big\">\n\t\tRussia and other UN Security Council Permanent Members\n\t</p>\n</Filler>\n\n<Scroller {threshold} bind:id={id[\"area\"]} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t{#if areachart_data && linechart_data}\n\t\t\t\t\t<div class=\"chart\">\n\t\t\t\t\t\t<Area\n\t\t\t\t\t\t\t{areachart_data}\n\t\t\t\t\t\t\t{just_year_parser}\n\t\t\t\t\t\t\t{linechart_data}\n\t\t\t\t\t\t\t{selectedCountry}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"area01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t{#if selectedCountry === \"Russia\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tRussia is the most prolific signatory of peace\n\t\t\t\t\t\tagreements of all UN Security Council Permanent Members.\n\t\t\t\t\t\tIn a number of years (1995, 2016-2018) it has signed\n\t\t\t\t\t\tmore agreements than the United Nations.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclass=\"rect\"\n\t\t\t\t\t\t\tstyle=\"background-color: rgba(0, 100, 100, 0.3);\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\">Overall agreements.</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"line\" style=\"background-color: red;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\">Russian agreements.</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclass=\"line\"\n\t\t\t\t\t\t\tstyle=\"background-color: rgb(0, 158, 158);\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\">Chinese agreements.</span>\n\t\t\t\t\t</div>\n\t\t\t\t{:else if selectedCountry === \"China\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tChina is the least prolific third-party signatory of\n\t\t\t\t\t\tpeace agreements of all UN Security Council permanent\n\t\t\t\t\t\tmembers. China signed 39 agreements as a third-party\n\t\t\t\t\t\tsince 1990, in comparison to Russian 134 signatures and\n\t\t\t\t\t\tthe US 132 signatures.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclass=\"rect\"\n\t\t\t\t\t\t\tstyle=\"background-color: rgba(0, 100, 100, 0.3);\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\">Overall agreements.</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"line\" style=\"background-color: red;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\">Chinese agreements.</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclass=\"line\"\n\t\t\t\t\t\t\tstyle=\"background-color: rgb(0, 158, 158);\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\">Russian agreements.</span>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Filler theme=\"light\" short={true} wide={true} center={true}>\n\t<p class=\"text-big\">Agreement Stages</p>\n</Filler>\n\n<Scroller {threshold} bind:id={id[\"donut\"]} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t{#if donut_data}\n\t\t\t\t\t<div class=\"chart\">\n\t\t\t\t\t\t<Donut {donut_data} {selectedCountry} />\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"donut01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t{#if selectedCountry === \"Russia\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tRussia primarily signs pre-negotiation and ceasefire\n\t\t\t\t\t\tagreements. These represent over half of all agreements\n\t\t\t\t\t\tsigned. For more details on the categories see\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://www.peaceagreements.org/files/Definitions_v7.pdf\"\n\t\t\t\t\t\t\ttarget=\"_blank\">here</a\n\t\t\t\t\t\t>.\n\t\t\t\t\t</p>\n\t\t\t\t{:else if selectedCountry === \"China\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tChinese involvement as a third-party signatory seems to\n\t\t\t\t\t\tcome at the point when there is a broad international\n\t\t\t\t\t\tconsensus regarding a peace process. Implementation\n\t\t\t\t\t\tagreements are the biggest category and represent 31% of\n\t\t\t\t\t\tall agreements signed by China. For more details on the\n\t\t\t\t\t\tcategories see\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://www.peaceagreements.org/files/Definitions_v7.pdf\"\n\t\t\t\t\t\t\ttarget=\"_blank\">here</a\n\t\t\t\t\t\t>.\n\t\t\t\t\t</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Filler theme=\"light\" short={true} wide={true} center={true}>\n\t<p class=\"text-big\">Comparison of Agreement Stages</p>\n</Filler>\n\n<Scroller {threshold} bind:id={id[\"bar\"]} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t{#if barchart_data}\n\t\t\t\t\t<div class=\"chart\">\n\t\t\t\t\t\t<Bars {barchart_data} {selectedCountry} />\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"bar01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t{#if selectedCountry === \"Russia\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCompared with all agreements, Russia signs more\n\t\t\t\t\t\tpre-negotiation agreements and less comprehensive and\n\t\t\t\t\t\timplementation agreements.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: black;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Overall agreements (% of all).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: red;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Russian signature (% of all signed by Russia).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{:else if selectedCountry === \"China\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCompared with all agreements, China signs more\n\t\t\t\t\t\tcomprehensive and implementation agreements, and less\n\t\t\t\t\t\tceasefires and partial ones.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: black;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Overall agreements (% of all).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: red;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Chinese signature (% of all signed by China).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"bar02\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t{#if selectedCountry === \"Russia\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPre-negotiation agreements represent 29% of all\n\t\t\t\t\t\tagreements with third-party signatories, but 35% of all\n\t\t\t\t\t\tagreements signed by Russia.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: black;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Overall agreements (% of all).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: red;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Russian signature (% of all signed by Russia).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{:else if selectedCountry === \"China\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tComprehensive agreements present only 6% of all\n\t\t\t\t\t\tagreements signed by third-parties, but amount to 10% of\n\t\t\t\t\t\tall agreements signed by China. Similarly, 31% of all\n\t\t\t\t\t\tagreements signed by China are implementation\n\t\t\t\t\t\tagreements, but the overall proportion of such\n\t\t\t\t\t\tagreements is 20%.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: black;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Overall agreements (% of all).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: red;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Chinese signature (% of all signed by China).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"bar03\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t{#if selectedCountry === \"Russia\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tComprehensive agreements represent 6% of all agreements\n\t\t\t\t\t\tsigned, but only 4% of all agreements signed by Russia.\n\t\t\t\t\t\tImplementation agreements represent 20% of all\n\t\t\t\t\t\tagreements signed, but only 17% of all agreements signed\n\t\t\t\t\t\tby Russia.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: black;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Overall agreements (% of all).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: red;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Russian signature (% of all signed by Russia).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{:else if selectedCountry === \"China\"}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIn contrast, only 8% of all agreements signed by China\n\t\t\t\t\t\tare ceasefires, with the overall proportion of such\n\t\t\t\t\t\tagreements at 19%.\n\t\t\t\t\t</p>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: black;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Overall agreements (% of all).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"legend\">\n\t\t\t\t\t\t<span class=\"rect\" style=\"background-color: red;\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t\t<span id=\"legend_text\"\n\t\t\t\t\t\t\t>Chinese signature (% of all signed by China).</span\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<!-- <Section>\n\t<h2>This is a section title</h2>\n\t<p>\n\t\tThis is a short paragraph of text to demonstrate the standard \"medium\" column width, font size and line spacing of the template.\n\t</p>\n\t<p>\n\t\tThis is a second short paragraph of text to demonstrate the size of the paragraph spacing in the template.\n\t</p>\n\t<blockquote class=\"text-indent\">\n\t\t\"This is an example of a large embedded quotation.\"&mdash;A. Person\n\t</blockquote>\n</Section> -->\n\n<!-- <Divider/> -->\n\n<!-- {#if data.region.indicators}\n\t<Media col=\"medium\" caption=\"Source: ONS mid-year population estimates.\">\n\t\t<div class=\"chart-sml\">\n\t\t\t<BarChart\n\t\t\t\tdata={[...data.region.indicators].sort((a, b) => a.pop - b.pop)}\n\t\t\t\txKey=\"pop\"\n\t\t\t\tyKey=\"name\"\n\t\t\t\tsnapTicks={false}\n\t\t\t\txFormatTick={(d) => d / 1e6}\n\t\t\t\txSuffix=\"m\"\n\t\t\t\theight={350}\n\t\t\t\tpadding={{ top: 0, bottom: 15, left: 140, right: 0 }}\n\t\t\t\tarea={false}\n\t\t\t\ttitle=\"Population by region/nation, 2020\"\n\t\t\t/>\n\t\t</div>\n\t</Media>\n{/if} -->\n\n<!-- <Section>\n\t<h2>Gridded charts or media</h2>\n\t<p>\n\t\tBelow is a grid that can contain charts or any other kind of visual media. The grid can fit in a medium, wide or full-width column, and the media width itself can be narrow (min 200px), medium (min 300px), wide (min 500px) or full-width. The grid is responsive, and will re-flow on smaller screens.\n\t</p>\n</Section> -->\n\n<!-- {#if data.region.timeseries && data.region.indicators}\n<Media\n\tcol=\"wide\"\n\tgrid=\"narrow\" gap={20}\n\tcaption=\"Source: ONS mid-year population estimates.\"\n>\n\t{#each [...data.region.indicators].sort((a, b) => b.pop - a.pop) as region}\n\t<div class=\"chart-sml\">\n\t\t<LineChart\n\t\t\tdata={data.region.timeseries}\n\t\t\txKey=\"year\" yKey=\"value\" zKey=\"code\"\n\t\t\tcolor=\"lightgrey\"\n\t\t\tlineWidth={1} xTicks={2} snapTicks={false}\n\t\t\tyFormatTick={d => (d / 1e6)} ySuffix=\"m\"\n\t\t\theight={200} padding={{top: 0, bottom: 20, left: 30, right: 15}}\n\t\t\tselected={region.code}\n\t\t\tarea={false} title={region.name}/>\n\t</div>\n\t{/each}\n</Media>\n{/if} -->\n\n<!-- <Section>\n\t<h2>Gridded charts or media</h2>\n\t<p>\n\t\tBelow is a grid that can contain charts or any other kind of visual media. The grid can fit in a medium, wide or full-width column, and the media width itself can be narrow (min 200px), medium (min 300px), wide (min 500px) or full-width. The grid is responsive, and will re-flow on smaller screens.\n\t</p>\n</Section> -->\n\n<!-- <Divider />\n\n<Section>\n\t<h2>This is a full-width chart demo</h2>\n\t<p>\n\t\tBelow is an example of a media grid where the column with is set to \"full\". This allows for full width images and charts.\n\t</p>\n\t<p>\n\n\t</p>\n</Section>\n\n<Media\n\tcol=\"full\"\n\theight={600}\n\tcaption='This is an optional caption for the above chart or media. It can contain HTML code and <a href=\"#\">hyperlinks</a>, and wrap onto multiple lines.'\n>\n\t<div class=\"chart-full\">\n\t\t{#if data.district.timeseries}\n\t\t<LineChart\n\t\t\tdata={data.district.timeseries}\n\t\t\tpadding={{left: 50, right: 150, top: 0, bottom: 0}}\n\t\t\theight=\"500px\"\n\t\t\txKey=\"year\" yKey=\"value\" zKey=\"code\"\n\t\t\tcolor=\"lightgrey\" lineWidth={1}\n\t\t\tyFormatTick={d => (d/1e6).toFixed(1)} ySuffix=\"m\"\n\t\t\tselect {selected} on:select={doSelect}\n\t\t\thover {hovered} on:hover={doHover}\n\t\t\thighlighted={chartHighlighted}\n\t\t\tcolorSelect=\"#206095\" colorHighlight=\"#999\"\n\t\t\tarea={false} title=\"Mid-year population by district, 2001 to 2020\"\n\t\t\tlabels labelKey=\"name\"/>\n\t\t{/if}\n\t</div>\n</Media>\n\n<Divider />-->\n\n<Filler theme=\"light\" short={true} wide={true} center={true}>\n\t<p class=\"text-big\">Geography</p>\n</Filler>\n\n{#if mygeojson}\n\t<Scroller {threshold} bind:id={id[\"map\"]}>\n\t\t<div slot=\"background\">\n\t\t\t<figure>\n\t\t\t\t<div class=\"col-full height-full\">\n\t\t\t\t\t<Globe\n\t\t\t\t\t\t{mygeojson}\n\t\t\t\t\t\tbind:map\n\t\t\t\t\t\ton:mapLoaded={handleMapLoaded}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</figure>\n\t\t</div>\n\n\t\t<div slot=\"foreground\">\n\t\t\t<section data-id=\"map01\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tRussia has most often acted as a third-party signatory\n\t\t\t\t\t\tin the 1990s. Majority of these agreements relate to the\n\t\t\t\t\t\tdissolution of the Soviet Union.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"map02\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tRussia has most often acted as a third-party signatory\n\t\t\t\t\t\tin the 1990s. Majority of these agreements relate to the\n\t\t\t\t\t\tdissolution of the Soviet Union.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</div>\n\t</Scroller>\n{/if}\n\n<Section>\n\t<h2>Research</h2>\n\t<p class=\"mb\">\n\t\tRead our research on Russia and its approaches to conflict, peace\n\t\tprocesses and mediation.\n\t</p>\n</Section>\n\n<!-- {#if geojson && data.district.indicators}\n<Scroller {threshold} bind:id={id['map']}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-full height-full\">\n\t\t\t\t<Map style={mapstyle} bind:map interactive={false} location={{bounds: mapbounds.uk}}>\n\t\t\t\t\t<MapSource\n\t\t\t\t\t  id=\"lad\"\n\t\t\t\t\t  type=\"geojson\"\n\t\t\t\t\t  data={geojson}\n\t\t\t\t\t  promoteId=\"AREACD\"\n\t\t\t\t\t  maxzoom={13}>\n\t\t\t\t\t  <MapLayer\n\t\t\t\t\t  \tid=\"lad-fill\"\n\t\t\t\t\t\t\tidKey=\"code\"\n\t\t\t\t\t\t\tcolorKey={mapKey + \"_color\"}\n\t\t\t\t\t  \tdata={data.district.indicators}\n\t\t\t\t\t  \ttype=\"fill\"\n\t\t\t\t\t\t\tselect {selected} on:select={doSelect} clickIgnore={!explore}\n\t\t\t\t\t\t\thover {hovered} on:hover={doHover}\n\t\t\t\t\t\t\thighlight highlighted={mapHighlighted}\n\t\t\t\t\t  \tpaint={{\n\t\t\t\t\t  \t\t'fill-color': ['case',\n\t\t\t\t\t  \t\t\t['!=', ['feature-state', 'color'], null], ['feature-state', 'color'],\n\t\t\t\t\t  \t\t\t'rgba(255, 255, 255, 0)'\n\t\t\t\t\t  \t\t],\n\t\t\t\t\t  \t\t'fill-opacity': 0.7\n\t\t\t\t\t  \t}}>\n\t\t\t\t\t\t\t\t<MapTooltip content={\n\t\t\t\t\t\t\t\t\thovered ? `${metadata.district.lookup[hovered].name}<br/><strong>${data.district.indicators.find(d => d.code == hovered)[mapKey].toLocaleString()} ${units[mapKey]}</strong>` : ''\n\t\t\t\t\t\t\t\t}/>\n\t\t\t\t\t\t\t</MapLayer>\n\t\t\t\t\t\t<MapLayer\n\t\t\t\t\t  \tid=\"lad-line\"\n\t\t\t\t\t  \ttype=\"line\"\n\t\t\t\t\t  \tpaint={{\n\t\t\t\t\t  \t\t'line-color': ['case',\n\t\t\t\t\t  \t\t\t['==', ['feature-state', 'hovered'], true], 'orange',\n\t\t\t\t\t  \t\t\t['==', ['feature-state', 'selected'], true], 'black',\n\t\t\t\t\t  \t\t\t['==', ['feature-state', 'highlighted'], true], 'black',\n\t\t\t\t\t  \t\t\t'rgba(255,255,255,0)'\n\t\t\t\t\t  \t\t],\n\t\t\t\t\t  \t\t'line-width': 2\n\t\t\t\t\t  \t}}\n\t\t\t\t    />\n\t\t\t\t  </MapSource>\n\t\t\t\t</Map>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"map01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tThis map shows <strong>population density</strong> by district. Districts are coloured from <Em color={colors.seq[0]}>least dense</Em> to <Em color={colors.seq[4]}>most dense</Em>. You can hover to see the district name and density.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"map02\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tThe map now shows <strong>median age</strong>, from <Em color={colors.seq[0]}>youngest</Em> to <Em color={colors.seq[4]}>oldest</Em>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"map03\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t{#each [[...data.district.indicators].sort((a, b) => b.age_med - a.age_med)[0]] as district}\n\t\t\t\t<p>\n\t\t\t\t\tThe map is now zoomed on <Em color={district.age_med_color}>{district.name}</Em>, the district with the oldest median age, {district.age_med} years.\n\t\t\t\t</p>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"map04\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<h3>Select a district</h3>\n\t\t\t\t<p>Use the selection box below or click on the map to select and zoom to a district.</p>\n\t\t\t\t{#if geojson}\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<select bind:value={selected} on:change={() => fitById(selected)}>\n\t\t\t\t\t\t\t<option value={null}>Select one</option>\n\t\t\t\t\t\t\t{#each geojson.features as place}\n\t\t\t\t\t\t\t\t<option value={place.properties.AREACD}>\n\t\t\t\t\t\t\t\t\t{place.properties.AREANM}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n{/if} -->\n\n<Divider />\n\n<!-- <Section>\n\t<h2>How to use this template</h2>\n\t<p>\n\t\tYou can find the source code and documentation on how to use this\n\t\ttemplate in <a\n\t\t\thref=\"https://github.com/ONSvisual/svelte-scrolly/\"\n\t\t\ttarget=\"_blank\">this Github repo</a\n\t\t>.\n\t</p>\n</Section>\n\n<ONSFooter /> -->\n\n<style>\n\t#loading_screen {\n\t\tposition: absolute;\n\t\tbackground-color: #ffffff;\n\t\tz-index: 13;\n\t\twidth: 100%;\n\t\theight: 100vh;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\t/* align-items: center; */\n\t}\n\n\t#loading_text {\n\t\tposition: absolute;\n\t\ttop: 40%;\n\t\tcolor: black;\n\t}\n\n\t#loading_button {\n\t\tposition: absolute;\n\t\ttop: 40%;\n\t\tfont-family: \"Montserrat\";\n\t\tbackground-color: #ffffff;\n\t\tcolor: black;\n\t\tborder: 1px solid gray;\n\t\tborder-radius: 2px;\n\t\tpadding: 10px 15px;\n\t\tfont-size: 16px;\n\t\tcursor: pointer;\n\t\ttransition:\n\t\t\tbackground-color 0.3s ease,\n\t\t\tcolor 0.3s ease;\n\t\tvisibility: hidden;\n\t}\n\n\t#loading_button:hover {\n\t\tbackground-color: steelblue;\n\t\tcolor: black;\n\t}\n\t/* Styles specific to elements within the demo */\n\t:global(svelte-scroller-foreground) {\n\t\tpointer-events: none !important;\n\t}\n\t:global(svelte-scroller-foreground section div) {\n\t\tpointer-events: all !important;\n\t}\n\n\t.chart {\n\t\tmargin-top: 45px;\n\t\twidth: calc(100% - 5px);\n\t}\n\n\t.dot {\n\t\theight: 15px;\n\t\twidth: 15px;\n\t\tbackground-color: black;\n\t\tborder-radius: 50%;\n\t\tdisplay: inline-block; /* Ensures the dot stays inline with the text */\n\t\tmargin-right: 8px; /* Adjust the space between the dot and the text */\n\t\tvertical-align: middle; /* Vertically aligns the dot with the middle of the text */\n\t}\n\n\t#legend {\n\t\tdisplay: flex; /* Align items horizontally */\n\t\talign-items: center; /* Vertically center the dot and text */\n\t\tpadding-left: 0px;\n\t}\n\n\t.dot {\n\t\theight: 15px;\n\t\twidth: 15px;\n\t\tbackground-color: black;\n\t\tborder-radius: 50%; /* Ensures the element is a perfect circle */\n\t\tdisplay: inline-block;\n\t\tmargin-right: 8px; /* Space between the dot and the text */\n\t\tflex-shrink: 0; /* Prevents the dot from shrinking in a flex container */\n\t}\n\n\t.rect {\n\t\theight: 18px;\n\t\twidth: 18px;\n\t\tdisplay: inline-block;\n\t\tmargin-right: 8px; /* Space between the dot and the text */\n\t\tflex-shrink: 0; /* Prevents the dot from shrinking in a flex container */\n\t}\n\n\t.line {\n\t\theight: 3px;\n\t\twidth: 18px;\n\t\tdisplay: inline-block;\n\t\tmargin-right: 8px; /* Space between the dot and the text */\n\t\tflex-shrink: 0; /* Prevents the dot from shrinking in a flex container */\n\t}\n\n\t#legend_text {\n\t\tfont-size: 14px;\n\t\tline-height: 1.5;\n\t\tmargin: 0;\n\t}\n\t/* select {\n\t\tmax-width: 350px;\n\t} */\n\t/* .chart-full {\n\t\tmargin: 0 20px;\n\t}\n\t.chart-sml {\n\t\tfont-size: 0.85em;\n\t} */\n\t/* The properties below make the media DIVs grey, for visual purposes in demo */\n\t/* .media {\n\t\tbackground-color: #f0f0f0;\n\t\tdisplay: -webkit-box;\n\t\tdisplay: -ms-flexbox;\n\t\tdisplay: flex;\n\t\t-webkit-box-orient: vertical;\n\t\t-webkit-box-direction: normal;\n\t\t-ms-flex-flow: column;\n\t\tflex-flow: column;\n\t\t-webkit-box-pack: center;\n\t\t-ms-flex-pack: center;\n\t\tjustify-content: center;\n\t\ttext-align: center;\n\t\tcolor: #aaa;\n\t} */\n</style>\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n  export let theme = getContext('theme');\n  export let hr = true;\n</script>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-medium\">\n    {#if hr}\n    <hr style=\"color: {themes[theme]['muted']}\"/>\n    {:else}\n    <hr style=\"color: {themes[theme]['muted']}; border: none;\"/>\n    {/if}\n\t</div>\n</section>\n\n<style>\n  hr {\n    width: 75px;\n    border: none;\n    border-top: 2px solid;\n    margin: 40px auto -10px auto;\n  }\n</style>\n\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n\texport let center = true;\n\texport let wide = false;\n\texport let short = false;\n</script>\n\n<style>\n\tsection {\n\t\tpadding: 36px 0;\n\t}\n\t.short {\n\t\tmin-height: 70vh;\n\t}\n</style>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"middle\" class:center class:col-medium={!wide} class:col-wide={wide} class:height-full={!short} class:short>\n\t\t<slot></slot>\n\t</div>\n</section>",
    "<script>\n  import { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n  export let bgimage = null;\n  export let bgcolor = null;\n  export let bgfixed = false;\n  export let center = true;\n  export let short = false;\n\n  let style = '';\n\n  if (bgimage) {\n    style += `background-image: url(${bgimage});`;\n  } else {\n    style += 'background-image: none;';\n  }\n\n  if (bgfixed) {\n    style += ' background-attachment: fixed;';\n  }\n</script>\n\n<style>\n  .short {\n    min-height: 85vh;\n  }\n  .v-padded {\n    box-sizing: border-box;\n    padding: 40px 0;\n  }\n</style>\n\n<header style=\"color: {themes[theme]['text']}; background-color: {bgcolor ? bgcolor : themes[theme]['background']}; {style}\" class:short>\n\t<div class=\"v-padded col-wide middle\" style=\"position: relative\" class:short class:height-full={!short}>\n\t\t<div class:center>\n\t\t\t<slot></slot>\n    </div>\n\t</div>\n</header>",
    "<script>\n\timport { themes } from \"../config.js\";\n\timport { onMount, getContext } from \"svelte\";\n\timport { debounce } from \"debounce\";\n\n\tconst colWidths = {\n\t\tnarrow: 200,\n\t\tmedium: 300,\n\t\twide: 500,\n\t};\n\n\texport let theme = getContext(\"theme\");\n\texport let col = \"medium\";\n\texport let grid = null;\n\texport let caption = null;\n\texport let height = 200;\n\texport let gap = 12;\n\n\tlet gridClass = grid ? ` grid-${grid}` : '';\n\n\tlet nogrid = !(\"grid-gap\" in document.body.style);\n\t\n\tlet rowHeight = !Number.isNaN(height) ? height + \"px\" : height;\n\n\tlet gridGap = !Number.isNaN(gap) ? gap + \"px\" : gap;\n\n\t// The code below this point mimics CSS Grid functionality in IE 11\n\tconst minWidth = grid && colWidths[grid] ? colWidths[grid] : null;\n\n\tlet gridWidth;\n\tlet cols;\n\n\tlet el;\n\tlet divs;\n\tlet count;\n\n\tif (nogrid) {\n\t\tonMount(() => {\n\t\t\tresize();\n\t\t});\n\t}\n\n\tconst update = debounce(resize, 200);\n\n\tfunction resize() {\n\t\tif (el && !divs) {\n\t\t\tlet arr = [];\n\t\t\tlet children = el.childNodes;\n\t\t\tchildren.forEach((child) => {\n\t\t\t\tif (child.nodeName == \"DIV\") {\n\t\t\t\t\tarr.push(child);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdivs = arr;\n\t\t}\n\t\tcount = divs.length;\n\t\tcols = !minWidth || gridWidth <= minWidth ? 1 : Math.floor(gridWidth / minWidth);\n\t\tmakeCols();\n\t}\n\n\tfunction makeCols() {\n\t\tlet r =\n\t\t\tMath.ceil(count / cols) > 1\n\t\t\t\t? `-ms-grid-rows: 1fr (${gap}px 1fr)[${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }]; grid-template-rows: 1fr repeat(${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }, ${gap}px 1fr);`\n\t\t\t\t: `-ms-grid-rows: 1fr; grid-template-rows: 1fr;`;\n\t\tlet c =\n\t\t\tcols > 1\n\t\t\t\t? `-ms-grid-columns: 1fr (${gap}px 1fr)[${\n\t\t\t\t\t\tcols - 1\n\t\t\t\t  }]; grid-template-columns: 1fr repeat(${cols - 1}, ${gap}px 1fr);`\n\t\t\t\t: \"\";\n\t\tel.style.cssText = r + c;\n\t\tdivs.forEach((div, i) => {\n\t\t\tlet col = (i % cols) * 2 + 1;\n\t\t\tlet row = Math.floor(i / cols) * 2 + 1;\n\t\t\tdiv.style.cssText = `-ms-grid-column: ${col}; -ms-grid-row: ${row}; grid-column: ${col}; grid-row: ${row}; min-height: ${rowHeight};`;\n\t\t});\n\t}\n\n\t$: nogrid && (minWidth || gridWidth) && update();\n</script>\n\n{#if nogrid}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div bind:this={el} bind:clientWidth={gridWidth} class=\"grid-ms\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</figure>\n{:else}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div class=\"grid{gridClass}\" style=\"grid-gap: {gridGap}; min-height: {rowHeight}\">\n\t\t\t<slot></slot>\n\t\t</div>\n  </div>\n</figure>\n{/if}\n{#if caption}\n\t<caption style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t\t<div class=\"col-medium\">\n\t\t\t<div class=\"caption\">{@html caption}</div>\n\t\t</div>\n\t</caption>\n{/if}\n\n<style>\n\t.grid-ms {\n\t\tdisplay: grid;\n\t\tdisplay: -ms-grid;\n\t\t-ms-grid-columns: 1fr;\n\t\tgrid-template-columns: 1fr;\n\t\tmargin-top: 40px;\n\t}\n\t.grid {\n\t\tdisplay: -ms-grid;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(auto-fill, 100%);\n\t\tmargin: 40px 0 0 0;\n\t}\n\t.grid-narrow {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(200px, 1fr)) !important;\n\t}\n\t.grid-medium {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(300px, 1fr)) !important;\n\t}\n\t.grid-wide {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(500px, 1fr)) !important;\n\t}\n\t:global(.grid > div) {\n\t\tmin-height: inherit;\n\t}\n</style>\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n</script>\n\n<footer style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['pale']};\">\n\t<div class=\"col-wide\" data-analytics=\"footer\">\n\t\t<a href=\"https://www.ons.gov.uk/\">\n\t\t\t{#if theme == 'dark'}\n\t\t\t<img\n\t\t\t\tclass=\"logo-img\"\n\t\t\t\tsrc=\"./img/ons-logo-neg-en.svg\"\n\t\t\t\talt=\"Office for National Statistics\" />\n\t\t\t{:else}\n\t\t\t<img\n\t\t\t\tclass=\"logo-img\"\n\t\t\t\tsrc=\"./img/ons-logo-black-en.svg\"\n\t\t\t\talt=\"Office for National Statistics\" />\n\t\t\t{/if}\n\t\t</a>\n\t\t<ul>\n\t\t\t<li><a href=\"https://www.ons.gov.uk/aboutus/contactus\" class=\"link\" style=\"color: {themes[theme]['text']}\">Contact us</a></li>\n\t\t\t<li><a href=\"https://www.ons.gov.uk/help/privacynotice\" class=\"link\" style=\"color: {themes[theme]['text']}\">Cookies and privacy</a></li>\n\t\t</ul>\n\t\t<hr style=\"border-top-color: {themes[theme]['muted']}\" />\n\t\t<div class=\"license\">\n\t\t\t<svg class=\"ogl-img\" viewBox=\"0 0 59 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<title>UK Open Government Licence</title>\n\t\t\t\t<path fill=\"{themes[theme]['muted']}\" d=\"M59,17.5v6.2H45.3V4l6.2-3.9v17.4H59z M33.6,13h9.8v10.7H43L40.6,21c-2.1,1.8-4.9,3-7.9,3 c-4.4,0-8.3-2.4-10.4-6.1c-2.1,3.6-5.9,6.1-10.4,6.1C5.4,23.9,0,18.6,0,12C0,5.4,5.4,0.1,11.9,0.1c4.5,0,8.4,2.5,10.4,6.1 c2.1-3.6,5.9-6.1,10.4-6.1c4.2,0,7.9,2.2,10.1,5.5l-5.2,3.3c-1-1.6-2.8-2.7-4.8-2.7C29.6,6.2,27,8.8,27,12s2.6,5.8,5.8,5.8 c1.5,0,2.8-0.5,3.8-1.4L33.6,13z M17.7,12c0-3.2-2.6-5.7-5.8-5.7S6.2,8.8,6.2,12s2.6,5.8,5.8,5.8S17.7,15.2,17.7,12z\"/>\n\t\t\t</svg>\n\t\t\tAll content is available under the\n\t\t\t<a\n\t\t\t\thref=\"https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\"\n\t\t\t\tclass=\"link\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener\"\n\t\t\t\tstyle=\"color: {themes[theme]['text']}\">Open Government Licence v3.0</a>, \n\t\t\texcept where otherwise stated\n\t\t</div>\n\t</div>\n</footer>\n\n<style>\n\tfooter {\n\t\tpadding-bottom: 72px;\n\t\tpadding-top: 36px;\n\t\tfont-size: 18px;\n\t}\n\tfooter a.link {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\ttext-decoration: underline;\n\t\tdisplay: inline-block;\n\t}\n\tfooter a.link:hover {\n\t\ttext-decoration: none;\n\t}\n\tfooter a.link:active {\n\t\toutline: 3px solid transparent;\n\t\tbackground-color: #fd0;\n\t\t-webkit-box-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tbox-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tcolor: #222;\n\t\ttext-decoration: none;\n\t}\n\tfooter hr {\n\t\tmargin-bottom: 27px;\n\t\tmargin-top: 36px;\n\t\tborder: none;\n\t\tborder-top: 1px solid #777;\n\t}\n\tul {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\tli {\n\t\tmargin-right: 18px;\n\t\tdisplay: inline-block;\n\t}\n\t.logo-img {\n\t\tmargin-bottom: 27px;\n\t}\n\t.ogl-img {\n\t\tmargin: 0 0.5rem 0.2rem 0;\n\t\twidth: 59px;\n\t\theight: 24px;\n\t\tvertical-align: middle;\n\t}\n\t.license {\n\t\tvertical-align: top;\n\t}\n\ta img:hover {\n\t\tcursor: pointer;\n\t}\n</style>",
    "<script>\n\texport let center = true;\n\tlet width;\n</script>\n\n<nav style=\"background-color: white;\" bind:clientWidth={width}>\n  <!-- <div class=\"col-wide middle\" class:center> -->\n  <div style=\"width:{width}px\" class:center>\n\t\t<a href=\"https://peacerep.org/\">\n\t\t\t<picture>\n\t\t\t\t<img src=\"./img/PeaceRep_nobg.png\" alt=\"PeaceRep Logo\">\n\t\t\t</picture>\n\t\t</a>\n  </div>\n</nav>\n\n<style>\n\tnav {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\tposition: relative;\n\t\theight: 50px;\n\t\tmargin-bottom: -49px;\n\t\tz-index: 1;\n\t}\n\tpicture {\n\t\tposition: relative;\n\t\ttop: 1px;\n\t\tleft: 1px;\n\t}\n\timg {\n\t\theight: 49px;\n\t}\n\ta img:hover {\n\t\tcursor: pointer;\n\t}\n</style>",
    "<script context=\"module\">\r\n  // Based on svelte-scroller by Rich Harris\r\n  // https://github.com/sveltejs/svelte-scroller\r\n  // Patched to transpile to IE 11 and allow for split-screen view option\r\n\r\n\tconst handlers = [];\r\n\tlet manager;\r\n\r\n\tif (typeof window !== 'undefined') {\r\n\t\tconst run_all = () => handlers.forEach(fn => fn());\r\n\r\n\t\twindow.addEventListener('scroll', run_all);\r\n\t\twindow.addEventListener('resize', run_all);\r\n\t}\r\n\r\n\tif (typeof IntersectionObserver !== 'undefined') {\r\n\t\tconst map = new Map();\r\n\r\n\t\tconst observer = new IntersectionObserver((entries, observer) => {\r\n\t\t\tentries.forEach(entry => {\r\n\t\t\t\tconst update = map.get(entry.target);\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\r\n\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\tif (index === -1) handlers.push(update);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tupdate();\r\n\t\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, {\r\n\t\t\trootMargin: '400px 0px' // TODO why 400?\r\n\t\t});\r\n\r\n\t\tmanager = {\r\n\t\t\tadd: ({ outer, update }) => {\r\n\t\t\t\tconst { top, bottom } = outer.getBoundingClientRect();\r\n\r\n\t\t\t\tif (top < window.innerHeight && bottom > 0) handlers.push(update);\r\n\r\n\t\t\t\tmap.set(outer, update);\r\n\t\t\t\tobserver.observe(outer);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ outer, update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\r\n\t\t\t\tmap.delete(outer);\r\n\t\t\t\tobserver.unobserve(outer);\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\tmanager = {\r\n\t\t\tadd: ({ update }) => {\r\n\t\t\t\thandlers.push(update);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\t// config\r\n\texport let top = 0;\r\n\texport let bottom = 1;\r\n\texport let threshold = 0.5;\r\n\texport let query = 'section';\r\n\texport let parallax = false;\r\n\r\n\t// bindings\r\n\texport let index = 0;\r\n\texport let count = 0;\r\n\texport let offset = 0;\r\n\texport let progress = 0;\r\n\texport let visible = false;\r\n\texport let splitscreen = false; // Add class to allow for split screen option\r\n\texport let id = null;\r\n\r\n\tlet outer;\r\n  let bgContainer; // IE patch. Container binding to update inline style\r\n\tlet foreground;\r\n\tlet background;\r\n\tlet left;\r\n\tlet sections;\r\n\tlet wh = 0;\r\n\tlet fixed;\r\n\tlet offset_top;\r\n\tlet width = 1;\r\n\tlet height;\r\n\tlet inverted;\r\n\r\n\t$: top_px = Math.round(top * wh);\r\n\t$: bottom_px = Math.round(bottom * wh);\r\n\t$: threshold_px = Math.round(threshold * wh);\r\n\r\n\t$: (top, bottom, threshold, parallax, update());\r\n\r\n\tonMount(() => {\r\n\t\tsections = foreground.querySelectorAll(query);\r\n\t\tcount = sections.length;\r\n\r\n\t\tupdate();\r\n\r\n\t\tconst scroller = { outer, update };\r\n\r\n\t\tmanager.add(scroller);\r\n\t\treturn () => manager.remove(scroller);\r\n\t});\r\n\r\n\t// IE patch. BG container style (fixed/unfixed) set via function\r\n  function setFixed() {\r\n    if (bgContainer) {\r\n      let style = `position: ${fixed ? 'fixed' : 'absolute'}; top: 0; transform: translate(0, ${offset_top}px); width: 100%; z-index: ${inverted ? 3 : 1};`;\r\n      bgContainer.style.cssText = style;\r\n    }\r\n  }\r\n\r\n\tfunction update() {\r\n\t\tif (!foreground) return;\r\n\r\n\t\t// re-measure outer container\r\n\t\tconst bcr = outer.getBoundingClientRect();\r\n\t\tleft = bcr.left;\r\n\t\twidth = bcr.right - bcr.left;\r\n\r\n\t\t// determine fix state\r\n\t\tconst fg = foreground.getBoundingClientRect();\r\n\t\tconst bg = background.getBoundingClientRect();\r\n\r\n\t\tvisible = fg.top < wh && fg.bottom > 0;\r\n\r\n\t\tconst foreground_height = fg.bottom - fg.top;\r\n\t\tconst background_height = bg.bottom - bg.top;\r\n\r\n\t\tconst available_space = bottom_px - top_px;\r\n\t\tprogress = (top_px - fg.top) / (foreground_height - available_space);\r\n\r\n\t\tif (progress <= 0) {\r\n\t\t\toffset_top = 0;\r\n      if (fixed) {\r\n        fixed = false;\r\n        setFixed();\r\n      } // Non-IE specific patch to avoid setting style repeatedly\r\n\t\t} else if (progress >= 1) {\r\n\t\t\toffset_top = parallax\r\n\t\t\t\t? (foreground_height - background_height)\r\n\t\t\t\t: (foreground_height - available_space);\r\n      if (fixed) {\r\n        fixed = false;\r\n        setFixed();\r\n      }\r\n\t\t} else {\r\n\t\t\toffset_top = parallax ?\r\n\t\t\t\tMath.round(top_px - progress * (background_height - available_space)) :\r\n\t\t\t\ttop_px;\r\n      if (!fixed) {\r\n        fixed = true;\r\n        setFixed();\r\n      }\r\n\t\t}\r\n\r\n\t\tfor (index = 0; index < sections.length; index += 1) {\r\n\t\t\tconst section = sections[index];\r\n\t\t\tconst { top } = section.getBoundingClientRect();\r\n\r\n\t\t\tconst next = sections[index + 1];\r\n\t\t\tconst bottom = next ? next.getBoundingClientRect().top : fg.bottom;\r\n\r\n\t\t\toffset = (threshold_px - top) / (bottom - top);\r\n\t\t\tid = section.dataset.id ? section.dataset.id : null;\r\n\t\t\tif (bottom >= threshold_px) break;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:window bind:innerHeight={wh}/>\r\n\r\n<svelte-scroller-outer bind:this={outer} class:splitscreen bind:clientWidth={width}>\r\n\t<svelte-scroller-background-container class='background-container' bind:this={bgContainer}>\r\n\t\t<svelte-scroller-background bind:this={background}>\r\n\t\t\t<slot name=\"background\"></slot>\r\n\t\t</svelte-scroller-background>\r\n\t</svelte-scroller-background-container>\r\n\r\n\t<svelte-scroller-foreground bind:this={foreground}>\r\n\t\t<slot name=\"foreground\"></slot>\r\n\t</svelte-scroller-foreground>\r\n</svelte-scroller-outer>\r\n\r\n<style>\r\n\tsvelte-scroller-outer {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-background {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tz-index: 2;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground::after {\r\n\t\tcontent: ' ';\r\n\t\tdisplay: block;\r\n\t\tclear: both;\r\n\t}\r\n\r\n\tsvelte-scroller-background-container {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 100%;\r\n\t\tpointer-events: none;\r\n\t\t/* height: 100%; */\r\n\r\n\t\t/* in theory this helps prevent jumping */\r\n\t\twill-change: transform;\r\n\t\t/* -webkit-transform: translate3d(0, 0, 0);\r\n\t\t-moz-transform: translate3d(0, 0, 0);\r\n\t\ttransform: translate3d(0, 0, 0); */\r\n\t}\r\n</style>",
    "<script>\n  export let color = \"black\";\n  export let animation = true;\n\texport let center = true;\n\n  const colors = [\"black\", \"white\"];\n\n  color = colors.includes(color) ? color : \"black\";\n</script>\n\n{#if center}\n<slot></slot><br/>\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/>\n{:else}\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow left\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/><slot></slot>\n{/if}\n\n<style>\n\t.arrow {\n\t\twidth: 48px;\n\t\theight: 48px;\n\t}\n\t.left {\n\t\tmargin-right: 10px;\n\t}\n\t.bounce {\n\t\t-webkit-animation-duration: 2s;\n\t\t        animation-duration: 2s;\n\t\t-webkit-animation-iteration-count: infinite;\n\t\t        animation-iteration-count: infinite;\n\t\t-webkit-animation-name: bounce;\n\t\t        animation-name: bounce;\n\t\t-webkit-animation-timing-function: ease;\n\t\t        animation-timing-function: ease;\n\t}\n\t@-webkit-keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n\t@keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n</style>",
    "<script>\r\n    import { createEventDispatcher } from \"svelte\";\r\n\r\n    const dispatch = createEventDispatcher();\r\n    export let selectedCountry = \"Russia\";\r\n\r\n    function handleSelection(country) {\r\n        selectedCountry = country;\r\n        dispatch(\"close\", selectedCountry);\r\n    }\r\n</script>\r\n\r\n<div class=\"dropdown\">\r\n    <button class=\"dropbtn\">\r\n        <i class=\"fa fa-globe\"></i>\r\n    </button>\r\n    <div class=\"dropdown-content\">\r\n            <a href=\"#\" on:click={() => handleSelection(\"Russia\")}>Russia</a>\r\n            <a href=\"#\" on:click={() => handleSelection(\"China\")}>China</a>\r\n    </div>\r\n</div>\r\n\r\n\r\n<style>\r\n    /* Container needed to position the dropdown content */\r\n    .dropdown {\r\n        position: absolute;\r\n        top: 1px;\r\n        right: 60px;\r\n        display: inline-block;\r\n        z-index: 10;\r\n        font-family: \"Montserrat\";\r\n    }\r\n\r\n    @media only screen and (max-width: 500px) {\r\n        .dropdown {\r\n            right: 40px;\r\n        }\r\n    }\r\n\r\n    .dropbtn {\r\n        position: absolute;\r\n        background-color: white;\r\n        border: 1px solid rgb(173, 173, 173);\r\n        color: black;\r\n        padding: 5px 16px;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        border-radius: 2px;\r\n        display: inline-block;\r\n        font-size: 1em;\r\n        cursor: pointer;\r\n        z-index: 10;\r\n    }\r\n\r\n    .dropbtn:hover {\r\n        background-color: #aa4197;\r\n        color: white;\r\n    }\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        .dropbtn {\r\n            font-size: 0.7em;\r\n        }\r\n    }\r\n\r\n    @media only screen and (max-width: 500px) {\r\n        .dropbtn {\r\n            padding: 4px 10px;\r\n            font-size: 0.53em;\r\n        }\r\n    }\r\n    /* Dropdown content (hidden by default) */\r\n    .dropdown-content {\r\n        display: none;\r\n        position: absolute;\r\n        top: 30px;\r\n        right:-52px;\r\n        background-color: #f9f9f9;\r\n        min-width: 150px;\r\n        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n        z-index: 1;\r\n        max-height: 350px;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    @media only screen and (max-width: 500px) {\r\n        .dropdown-content {\r\n            right: -35px;\r\n            top: 25px;\r\n        }\r\n    }\r\n\r\n    /* Links inside the dropdown */\r\n    .dropdown-content a {\r\n        color: black;\r\n        padding: 12px 16px;\r\n        text-decoration: none;\r\n        display: block;\r\n    }\r\n\r\n    /* Change color of dropdown links on hover */\r\n    .dropdown-content a:hover {\r\n        background-color: #f1f1f1;\r\n    }\r\n\r\n    /* Show the dropdown menu on hover */\r\n    .dropdown:hover .dropdown-content {\r\n        display: block;\r\n    }\r\n\r\n    /* Change the background color of the dropdown button when the dropdown content is shown */\r\n    .dropdown:hover .dropbtn {\r\n        background-color: #aa4197;\r\n        color: white;\r\n    }\r\n</style>\r\n",
    "<script>\n  import parse from 'parse-color';\n\n  export let color = 'lightgrey';\n\texport let nowrap = true;\n\n  function textColor(rgb) {\n\t\tconst brightness = ((rgb[0] * 299) + (rgb[1] * 587) + (rgb[2] * 114)) / 1000;\n\t\treturn (brightness > 125) ? 'black' : 'white';\n\t}\n\n  let text = 'black';\n\n\t$: rgb = parse(color).rgb;\n\t\n\t$: if (rgb) {\n\t\ttext = textColor(rgb);\n\t}\n\n</script>\n\n<span class=\"em\" class:nowrap style=\"background-color: {color}; color: {text};\" role=\"presentation\">\n  <slot></slot>\n</span>\n\n<style>\n\t.em {\n\t\tpadding: 1px 4px 1px 4px;\n\t\tfont-weight: bold;\n\t}\n\t.nowrap {\n\t\twhite-space: nowrap;\n\t}\n</style>",
    "<script>\n  export let id = \"switch\";\n  export let label = \"Label\";\n  export let mono = false;\n  export let checked;\n</script>\n\n<div class=\"switch\">\n  <input bind:checked {id} type=\"checkbox\" class=\"switch-input\" tabindex=\"0\" />\n  <label for={id} class=\"switch-label\" class:mono>{label}</label>\n</div>\n\n<style>\n  .switch {\n    position: relative;\n    display: inline-block;\n  }\n  .switch-input {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    border: 0;\n  }\n  .switch-label::before,\n  .switch-label::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    cursor: pointer;\n  }\n  .switch-label {\n    display: block;\n    cursor: pointer;\n    margin-top: -4px;\n    margin-left: 58px;\n  }\n  .switch-label::before {\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    top: 0;\n    left: 0;\n    width: 48px;\n    height: 24px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    background-color: #aaa;\n    border-radius: 9999em;\n    -webkit-transition: background-color 0.25s ease;\n    -o-transition: background-color 0.25s ease;\n    transition: background-color 0.25s ease;\n  }\n  .switch-label::after {\n    top: 3px;\n    left: 3px;\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    background-color: #fff;\n    -webkit-transition: left 0.25s ease;\n    -o-transition: left 0.25s ease;\n    transition: left 0.25s ease;\n  }\n  .switch-input:checked + .switch-label::before {\n    background-color: rgb(32, 96, 149);\n  }\n  .switch-input:checked + .switch-label::after {\n    left: 27px;\n    top: 3px;\n  }\n\n  .mono::before {\n    border: 2px solid white;\n    background: none !important;\n  }\n</style>",
    "<script>\r\n\timport * as d3 from \"d3\";\r\n\r\n\texport let areachart_data;\r\n\texport let just_year_parser;\r\n\texport let linechart_data;\r\n\texport let selectedCountry;\r\n\r\n\tlet width = 400,\r\n\t\theight = 800;\r\n\r\n\tconst yTicks = [30, 60, 90];\r\n\tconst xTicks = [1995, 2000, 2005, 2010, 2015, 2020];\r\n\r\n\tconst margin = {\r\n\t\ttop: 10,\r\n\t\tright: 10,\r\n\t\tbottom: 10,\r\n\t\tleft: 10,\r\n\t};\r\n\r\n\t$: innerWidth = width - margin.left - margin.right;\r\n\t$: innerHeight = height - margin.top - margin.bottom;\r\n\r\n\t$: xScale = d3\r\n\t\t.scaleUtc()\r\n\t\t.domain(d3.extent(areachart_data, (d) => d.date))\r\n\t\t.range([0, innerWidth]);\r\n\r\n\t$: yScale = d3.scaleLinear().domain([0, 100]).range([innerHeight, 0]);\r\n\r\n\t$: minX = areachart_data[0].date;\r\n\t$: maxX = areachart_data[areachart_data.length - 1].date;\r\n\t$: path = `M${areachart_data.map((p) => `${xScale(p.date)},${yScale(p.value)}`).join(\"L\")}`;\r\n\t$: area = `${path}L${xScale(maxX)},${yScale(0)}L${xScale(minX)},${yScale(0)}Z`;\r\n\r\n\t$: points = linechart_data.map((d) => [\r\n\t\txScale(d.date),\r\n\t\tyScale(d.unemployment),\r\n\t\td.division,\r\n\t]);\r\n\t$: multiline_groups = d3.rollup(\r\n\t\tpoints,\r\n\t\t(v) => Object.assign(v, { z: v[0][2] }),\r\n\t\t(d) => d[2],\r\n\t);\r\n\r\n\t// Define a line generator\r\n\tlet line = d3\r\n\t\t.line()\r\n\t\t.x((d) => d[0]) // Use the raw x value\r\n\t\t.y((d) => d[1]) // Use the raw y value\r\n\t\t.curve(d3.curveCardinal.tension(0.5)); // Smooth curve\r\n\r\n\tfunction formatMobile(tick) {\r\n\t\treturn \"'\" + tick.toString().slice(-2);\r\n\t}\r\n</script>\r\n\r\n<div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\r\n\t<svg {width} {height}>\r\n\t\t<g class=\"axis y-axis\" transform=\"translate(0, {margin.top})\">\r\n\t\t\t{#each yTicks as tick}\r\n\t\t\t\t<g\r\n\t\t\t\t\tclass=\"tick tick-{tick}\"\r\n\t\t\t\t\ttransform=\"translate(0, {yScale(tick) - margin.bottom})\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<line x2=\"100%\" />\r\n\t\t\t\t\t<text y=\"-4\"\r\n\t\t\t\t\t\t>{tick} {tick === 8 ? \" million sq km\" : \"\"}</text\r\n\t\t\t\t\t>\r\n\t\t\t\t</g>\r\n\t\t\t{/each}\r\n\t\t</g>\r\n\r\n\t\t<g class=\"axis x-axis\">\r\n\t\t\t{#each xTicks as tick}\r\n\t\t\t\t<g\r\n\t\t\t\t\tclass=\"tick tick-{tick}\"\r\n\t\t\t\t\ttransform=\"translate({xScale(\r\n\t\t\t\t\t\tjust_year_parser(tick),\r\n\t\t\t\t\t)},{height})\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<line y1=\"-{height}\" y2=\"-{margin.bottom}\" x1=\"0\" x2=\"0\" />\r\n\t\t\t\t\t<text y=\"-2\">{width > 380 ? tick : formatMobile(tick)}</text\r\n\t\t\t\t\t>\r\n\t\t\t\t</g>\r\n\t\t\t{/each}\r\n\t\t</g>\r\n\r\n\t\t<!-- data -->\r\n\t\t<path class=\"path-area\" d={area} />\r\n\t\t<!-- <path class=\"path-line\" d={path} /> -->\r\n\r\n\t\t{#each Array.from(multiline_groups) as [key, points]}\r\n\t\t\t<path\r\n\t\t\t\td={line(points)}\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tstroke={key === selectedCountry ? \"red\" : \"rgb(0, 158, 158)\"}\r\n\t\t\t\tstroke-width=\"2\"\r\n\t\t\t/>\r\n\t\t{/each}\r\n\t</svg>\r\n</div>\r\n\r\n<style>\r\n\t.wrapper {\r\n\t\theight: 90vh;\r\n\t}\r\n\r\n\t.tick {\r\n\t\tfont-size: 0.725em;\r\n\t\tfont-weight: 200;\r\n\t}\r\n\r\n\t.tick line {\r\n\t\tstroke: #888;\r\n\t\tstroke-dasharray: 2;\r\n\t}\r\n\r\n\t.tick text {\r\n\t\tfill: #888;\r\n\t\ttext-anchor: start;\r\n\t}\r\n\r\n\t.tick.tick-0 line {\r\n\t\tstroke-dasharray: 0;\r\n\t}\r\n\r\n\t.x-axis .tick text {\r\n\t\ttext-anchor: middle;\r\n\t}\r\n\r\n\t.path-line {\r\n\t\tfill: none;\r\n\t\tstroke: rgb(0, 158, 158);\r\n\t\tstroke-linejoin: round;\r\n\t\tstroke-linecap: round;\r\n\t\tstroke-width: 2;\r\n\t}\r\n\r\n\t.path-area {\r\n\t\tfill: rgba(0, 100, 100, 0.3);\r\n\t}\r\n</style>\r\n",
    "<script>\r\n    import * as d3 from \"d3\";\r\n\r\n    export let barchart_data;\r\n    export let selectedCountry;\r\n\r\n    let width = 400,\r\n        height = 800,\r\n        radius = 8;\r\n\r\n    const margin = {\r\n        top: 10,\r\n        right: 10,\r\n        bottom: 10,\r\n        left: 10,\r\n    };\r\n\r\n    const yTicks = [10, 20, 30, 40];\r\n\r\n    $: innerWidth = width - margin.left - margin.right;\r\n    $: innerHeight = height - margin.top - margin.bottom;\r\n\r\n    // List of groups\r\n    let groups = [\r\n        \"Pre-negotiation\",\r\n        \"Ceasefire\",\r\n        \"Partial\",\r\n        \"Comprehensive\",\r\n        \"Implementation\",\r\n        \"Renewal\",\r\n        \"Other\",\r\n    ];\r\n\r\n    let subgroups = [\"All\"];\r\n    $: if (barchart_data) {\r\n        subgroups = [\"All\"]; // Reset to [\"All\"]\r\n        let keys = Object.keys(barchart_data[0]); // Get keys from the first object in barchart_data\r\n        subgroups.push(keys[2]); // Add the specific key you need\r\n    }\r\n\r\n    $: xScale = d3\r\n        .scaleBand()\r\n        .domain(groups)\r\n        .range([0, innerWidth])\r\n        .padding([0.2]);\r\n\r\n    $: xScaleSubgroup = d3\r\n        .scaleBand()\r\n        .domain(subgroups)\r\n        .range([0, xScale.bandwidth()])\r\n        .padding([0.05]);\r\n\r\n    $: yScale = d3.scaleLinear().domain([0, 45]).range([innerHeight, 0]);\r\n\r\n    $: formatted_barchart_data = barchart_data\r\n        .map((d) => {\r\n            return [\"All\", selectedCountry].map((key) => ({\r\n                key,\r\n                value: d[key],\r\n                group: d.group,\r\n                x: xScale(d.group) + xScaleSubgroup(key),\r\n                y: yScale(d[key]),\r\n                width: xScaleSubgroup.bandwidth(),\r\n                height: innerHeight - yScale(d[key]),\r\n            }));\r\n        })\r\n        .flat();\r\n\r\n    $: console.log(formatted_barchart_data);\r\n\r\n    function formatMobile(tick) {\r\n        return \"'\" + tick.toString().slice(-2);\r\n    }\r\n</script>\r\n\r\n<div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\r\n    <svg {width} {height}>\r\n        <g>\r\n            <g class=\"axis x-axis\">\r\n                {#each groups as tick}\r\n                    <g\r\n                        class=\"tick tick-{tick}\"\r\n                        transform=\"translate({xScale(tick)},{height})\"\r\n                    >\r\n                        <text y=\"-2\"\r\n                            >{width > 380 ? tick : formatMobile(tick)}</text\r\n                        >\r\n                    </g>\r\n                {/each}\r\n            </g>\r\n            <g class=\"axis y-axis\" transform=\"translate(0, {margin.top})\">\r\n                {#each yTicks as tick}\r\n                    <g\r\n                        class=\"tick tick-{tick}\"\r\n                        transform=\"translate(0, {yScale(tick) - margin.bottom})\"\r\n                    >\r\n                        <line x2=\"100%\" />\r\n                        <text y=\"-4\"\r\n                            >{tick} {tick === 8 ? \" million sq km\" : \"\"}</text\r\n                        >\r\n                    </g>\r\n                {/each}\r\n            </g>\r\n\r\n            {#each formatted_barchart_data as bar}\r\n                <rect\r\n                    x={bar.x}\r\n                    y={bar.y}\r\n                    width={bar.width}\r\n                    height={bar.height}\r\n                    fill={bar.key === \"All\" ? \"black\" : \"red\"}\r\n                />\r\n                <text\r\n                    x={bar.x + bar.width / 2}\r\n                    y={bar.y - 3}\r\n                    text-anchor=\"middle\"\r\n                    font-size=\"14px\">{Math.round(bar.value)}</text\r\n                >\r\n            {/each}\r\n        </g>\r\n    </svg>\r\n</div>\r\n\r\n<style>\r\n    .wrapper {\r\n        height: 90vh;\r\n    }\r\n    .tick {\r\n        font-size: 0.725em;\r\n        font-weight: 200;\r\n    }\r\n\r\n    .tick line {\r\n        stroke: #888;\r\n        stroke-dasharray: 2;\r\n    }\r\n\r\n    .tick text {\r\n        fill: #888;\r\n        text-anchor: start;\r\n    }\r\n\r\n    .tick.tick-0 line {\r\n        stroke-dasharray: 0;\r\n    }\r\n\r\n    .x-axis .tick text {\r\n        text-anchor: start;\r\n    }\r\n</style>\r\n",
    "<script>\r\n    import * as d3 from \"d3\";\r\n\r\n    export let beeswarm_data;\r\n    export let just_year_parser;\r\n    export let step;\r\n    export let selectedCountry;\r\n\r\n    function fillBlack() {\r\n        document.querySelectorAll(\"circle\").forEach((circle) => {\r\n            circle.setAttribute(\"fill\", \"black\");\r\n        });\r\n    }\r\n\r\n    $: {\r\n        if (step === \"two\") {\r\n            fillBlack();\r\n            if (selectedCountry === \"Russia\") {\r\n                document.querySelectorAll(\".soviet\").forEach((circle) => {\r\n                    circle.setAttribute(\"fill\", \"red\");\r\n                });\r\n            } else if (selectedCountry === \"China\") {\r\n                document.querySelectorAll(\".china_high\").forEach((circle) => {\r\n                    circle.setAttribute(\"fill\", \"red\");\r\n                });\r\n            }\r\n        } else if (step === \"three\") {\r\n            fillBlack();\r\n            if (selectedCountry === \"Russia\") {\r\n                document.querySelectorAll(\".syria\").forEach((circle) => {\r\n                    circle.setAttribute(\"fill\", \"red\");\r\n                });\r\n            } else if (selectedCountry === \"China\") {\r\n                document.querySelectorAll(\".un_p5\").forEach((circle) => {\r\n                    circle.setAttribute(\"fill\", \"red\");\r\n                });\r\n            }\r\n        } else {\r\n            fillBlack();\r\n        }\r\n    }\r\n\r\n    const soviet = [\r\n        \"Armenia\",\r\n        \"Azerbaijan\",\r\n        \"Belarus\",\r\n        \"Estonia\",\r\n        \"Georgia\",\r\n        \"Kazakhstan\",\r\n        \"Kyrgyzstan\",\r\n        \"Latvia\",\r\n        \"Lithuania\",\r\n        \"Moldova\",\r\n        \"Russia\",\r\n        \"Tajikistan\",\r\n        \"Turkmenistan\",\r\n        \"Ukraine\",\r\n        \"Uzbekistan\",\r\n    ];\r\n\r\n    const syria = [\"Syria\", \"Libya\", \"Central African Republic\"];\r\n\r\n    let china_highlight = [\r\n        \"Text of Joint Statement (29/09/2005)\",\r\n        \"Agreement on the Resolution of the Conflict in the Republic of South Sudan (ARCSS) (17/08/2015)\",\r\n        \"Agreement on the Cessation of Hostilities, Protection of Civilians and Humanitarian Access, Republic of South Sudan (21/12/2017)\",\r\n        \"Joint Trilateral Statement by the People’s Republic of China, the Kingdom of Saudi Arabia, and the Islamic Republic of Iran (10/03/2023)\",\r\n        \"The Nationwide Ceasefire Agreement (NCA) between The Government of the Republic of the Union of Myanmar and the Ethnic Armed Organizations (EAO) (15/10/2015)\",\r\n    ];\r\n\r\n    const xTicks = [1995, 2000, 2005, 2010, 2015, 2020];\r\n\r\n    let width = 400,\r\n        height = 400;\r\n\r\n    const margin = {\r\n        top: 10,\r\n        right: 10,\r\n        bottom: 10,\r\n        left: 10,\r\n    };\r\n\r\n    $: innerWidth = width - margin.left - margin.right;\r\n    $: innerHeight = height - margin.top - margin.bottom;\r\n\r\n    let tooltipVisible = false;\r\n    let tooltipContent = \"\";\r\n    let tooltipX = 0;\r\n    let tooltipY = 0;\r\n\r\n    // Scale for radius based on width\r\n    $: radiusScale = d3\r\n        .scaleLinear()\r\n        .domain([300, 800]) // Example domain: min and max width values\r\n        .range([4, 7]); // Example range: min and max radius values\r\n\r\n    // Compute the radius based on the current width\r\n    $: radius = radiusScale(innerWidth);\r\n\r\n    $: xScale = d3\r\n        .scaleTime()\r\n        .range([0, innerWidth])\r\n        .domain(d3.extent(beeswarm_data, (d) => d[1][0][0]));\r\n\r\n    let yScale = d3\r\n        .scaleTime()\r\n        .range([10, innerHeight])\r\n        .domain(d3.extent(beeswarm_data, (d) => d[1][0][0]));\r\n\r\n    $: simulation = d3\r\n        .forceSimulation(beeswarm_data)\r\n        .force(\"x\", d3.forceX((d) => xScale(d[1][0][0])).strength(0.95))\r\n        .force(\"y\", d3.forceY(innerHeight / 2).strength(0.03))\r\n        .force(\"collide\", d3.forceCollide(radius + 2)) // Use dynamic radius here\r\n        .alpha(0.3)\r\n        .alphaDecay(0.001)\r\n        .stop();\r\n\r\n    $: {\r\n        for (let i = 0, n = 200; i < n; ++i) {\r\n            simulation.tick();\r\n        }\r\n    }\r\n\r\n    function formatMobile(tick) {\r\n        return \"'\" + tick.toString().slice(-2);\r\n    }\r\n\r\n    function handleMouseOver(event, d) {\r\n        // Display tooltip with information\r\n        tooltipContent = d[1][0][1][0].agt_dat;\r\n        if (d.x >= width / 2) {\r\n            tooltipX = d.x - 210;\r\n        } else {\r\n            tooltipX = d.x + 10;\r\n        }\r\n        tooltipY = d.y + 10;\r\n        tooltipVisible = true;\r\n\r\n        d3.select(event.target).attr(\"fill\", \"red\"); // Change fill color on hover\r\n    }\r\n\r\n    function handleMouseOut(event, d) {\r\n        // Hide the tooltip\r\n        tooltipVisible = false;\r\n\r\n        d3.select(event.target).attr(\"fill\", \"black\"); // Reset fill color when mouse leaves\r\n    }\r\n\r\n    function assignClass(d) {\r\n        let individual_info = d[1][0][1][0];\r\n        let soviet_included = soviet.some((country) =>\r\n            individual_info.Con.includes(country),\r\n        );\r\n        let syria_included = syria.some((country) =>\r\n            individual_info.Con.includes(country),\r\n        );\r\n\r\n        let all_actors = [];\r\n        d[1][0][1].forEach(function (x) {\r\n            all_actors.push(x.actor_name);\r\n        });\r\n\r\n        let specifiedCountries = [\r\n            \"Russia\",\r\n            \"France\",\r\n            \"United Kingdom\",\r\n            \"United States\",\r\n            \"China\",\r\n        ];\r\n        let containsUnitedNations = all_actors.includes(\"United Nations\");\r\n        let containsEurope = all_actors.includes(\r\n            \"Conference on Security and Cooperation in Europe\",\r\n        );\r\n        let containsAllSpecifiedCountries = specifiedCountries.every(\r\n            (country) => all_actors.includes(country),\r\n        );\r\n\r\n\r\n        let classes = [];\r\n        //Add china classes\r\n        if (!china_highlight.includes(d[1][0][1][0].agt_dat)) {\r\n            if (\r\n                containsUnitedNations ||\r\n                containsAllSpecifiedCountries ||\r\n                containsEurope ||\r\n                d[1][0][1][0].AgtId == 2433\r\n            ) {\r\n                classes.push(\"china_high un_p5\");\r\n            } else {\r\n                classes.push(\"china_high\");\r\n            }\r\n        }\r\n\r\n        // Add \"soviet\" to the array if the condition is met\r\n        if (soviet_included) {\r\n            classes.push(\"soviet\");\r\n        }\r\n        // Add \"syria\" to the array if the condition is met\r\n        if (syria_included) {\r\n            classes.push(\"syria\");\r\n        }\r\n\r\n        // Join the class names into a single string separated by spaces\r\n        return classes.join(\" \");\r\n    }\r\n</script>\r\n\r\n<div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\r\n    <svg {width} {height}>\r\n        <g class=\"inner_chart\" transform=\"translate({margin.left}, {0})\">\r\n            <g class=\"axis x-axis\">\r\n                {#each xTicks as tick}\r\n                    <g\r\n                        class=\"tick tick-{tick}\"\r\n                        transform=\"translate({xScale(\r\n                            just_year_parser(tick),\r\n                        )},{height})\"\r\n                    >\r\n                        <line\r\n                            y1=\"-{height}\"\r\n                            y2=\"-{margin.bottom}\"\r\n                            x1=\"0\"\r\n                            x2=\"0\"\r\n                        />\r\n                        <text y=\"-2\"\r\n                            >{width > 380 ? tick : formatMobile(tick)}</text\r\n                        >\r\n                    </g>\r\n                {/each}\r\n                {#each simulation.nodes() as node}\r\n                    <circle\r\n                        cx={node.x}\r\n                        cy={node.y}\r\n                        r={radius}\r\n                        fill=\"black\"\r\n                        class={assignClass(node)}\r\n                        on:mouseover={(event) => handleMouseOver(event, node)}\r\n                        on:mouseout={(event) => handleMouseOut(event, node)}\r\n                        on:focus={(event) => handleMouseOver(event, node)}\r\n                        on:blur={(event) => handleMouseOut(event, node)}\r\n                    />\r\n                {/each}\r\n            </g>\r\n        </g>\r\n    </svg>\r\n\r\n    <!-- Tooltip div -->\r\n    {#if tooltipVisible}\r\n        <div class=\"tooltip\" style=\"left: {tooltipX}px; top: {tooltipY}px;\">\r\n            {tooltipContent}\r\n        </div>\r\n    {/if}\r\n</div>\r\n\r\n<style>\r\n    .wrapper {\r\n        height: 90vh;\r\n        position: relative;\r\n    }\r\n\r\n    .tick {\r\n        font-size: 0.725em;\r\n        font-weight: 200;\r\n    }\r\n\r\n    .tick line {\r\n        stroke: #888;\r\n        stroke-dasharray: 2;\r\n    }\r\n\r\n    .tick text {\r\n        fill: #888;\r\n        text-anchor: start;\r\n    }\r\n\r\n    .tick.tick-0 line {\r\n        stroke-dasharray: 0;\r\n    }\r\n\r\n    .x-axis .tick text {\r\n        text-anchor: middle;\r\n    }\r\n\r\n    .tooltip {\r\n        width: 200px;\r\n        z-index: 5;\r\n        position: absolute;\r\n        background-color: white;\r\n        border: 1px solid #ccc;\r\n        padding: 5px;\r\n        font-size: 0.6em;\r\n        pointer-events: none; /* Prevent tooltip from blocking mouse events */\r\n        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    circle:focus {\r\n        outline: none; /* Optional: Remove default focus outline */\r\n    }\r\n</style>\r\n",
    "<script>\r\n    import * as d3 from \"d3\";\r\n\r\n    export let donut_data;\r\n    export let selectedCountry;\r\n\r\n    // Define the desired order\r\n    let desiredOrder = [\r\n        \"Pre-negotiation\",\r\n        \"Ceasefire\",\r\n        \"Framework-substantive, partial\",\r\n        \"Framework-substantive, comprehensive\",\r\n        \"Implementation\",\r\n    ];\r\n\r\n    $: if (selectedCountry == \"China\") {\r\n        // Sort the array based on the desired order\r\n        donut_data.sort((a, b) => {\r\n            return desiredOrder.indexOf(a[0]) - desiredOrder.indexOf(b[0]);\r\n        });\r\n    }\r\n\r\n    let width = 400,\r\n        height = 800;\r\n\r\n    const russia_color = d3\r\n        .scaleOrdinal()\r\n        .domain([\r\n            \"Pre-negotiation\",\r\n            \"Ceasefire\",\r\n            \"Framework-substantive, partial\",\r\n            \"Framework-substantive, comprehensive\",\r\n            \"Renewal\",\r\n            \"Implementation\",\r\n            \"Other\",\r\n        ])\r\n        .range([\r\n            \"#016099\",\r\n            \"#df1f36\",\r\n            \"#fd8189\",\r\n            \"#fdd900\",\r\n            \"#7b8ad6\",\r\n            \"#3aae2a\",\r\n            \"#c0de88\",\r\n        ]);\r\n\r\n    const china_color = d3\r\n        .scaleOrdinal()\r\n        .domain([\r\n            \"Pre-negotiation\",\r\n            \"Ceasefire\",\r\n            \"Framework-substantive, partial\",\r\n            \"Framework-substantive, comprehensive\",\r\n            \"Implementation\",\r\n        ])\r\n        .range([\"#016099\", \"#df1f36\", \"#fd8189\", \"#fdd900\", \"#3aae2a\"]);\r\n\r\n    const margin = {\r\n        top: 10,\r\n        right: 10,\r\n        bottom: 10,\r\n        left: 10,\r\n    };\r\n\r\n    $: innerWidth = width - margin.left - margin.right;\r\n    $: innerHeight = height - margin.top - margin.bottom;\r\n\r\n    $: radius = Math.min(innerWidth, innerHeight) / 2;\r\n\r\n    // Compute the position of each group on the pie:\r\n    const pie = d3\r\n        .pie()\r\n        .sort(null) // Do not sort group by size\r\n        .value((d) => d[1][1].length);\r\n\r\n    $: data_ready = pie(Object.entries(donut_data));\r\n\r\n    // The arc generator\r\n    $: arc = d3\r\n        .arc()\r\n        .innerRadius(radius * 0.5) // This is the size of the donut hole\r\n        .outerRadius(radius * 0.8)\r\n        .cornerRadius(4);\r\n\r\n    // Another arc that won't be drawn. Just for labels positioning\r\n    $: outerArc = d3\r\n        .arc()\r\n        .innerRadius(radius * 0.9)\r\n        .outerRadius(radius * 0.9);\r\n\r\n    $: calcPoints = function (d) {\r\n        const posA = arc.centroid(d); // line insertion in the slice\r\n        const posB = outerArc.centroid(d); // line break: we use the other arc generator that has been built only for that\r\n        const posC = outerArc.centroid(d); // Label position = almost the same as posB\r\n        const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2; // we need the angle to see if the X position will be at the extreme right or extreme left\r\n        posC[0] = radius * 0.88 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\r\n        return [posA, posB, posC];\r\n    };\r\n\r\n    $: calcText = function (d) {\r\n        const pos = outerArc.centroid(d);\r\n        const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        pos[0] = radius * 0.88 * (midangle < Math.PI ? 1 : -1);\r\n        pos[1] -= 10;\r\n        return `translate(${pos})`;\r\n    };\r\n</script>\r\n\r\n<div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\r\n    <svg {width} {height}>\r\n        <g transform=\"translate({width / 2} {height / 2})\">\r\n            {#each data_ready as slice}\r\n                <path\r\n                    d={arc(slice)}\r\n                    stroke=\"white\"\r\n                    fill={selectedCountry === \"Russia\"\r\n                        ? russia_color(slice.data[1])\r\n                        : selectedCountry === \"China\"\r\n                          ? china_color(slice.data[1])\r\n                          : undefined}\r\n                />\r\n            {/each}\r\n            {#each data_ready as line}\r\n                <polyline\r\n                    fill=\"none\"\r\n                    stroke=\"black\"\r\n                    stroke-width=\"1\"\r\n                    points={calcPoints(line)}\r\n                />\r\n            {/each}\r\n            {#each data_ready as d}\r\n                <text\r\n                    fill=\"black\"\r\n                    font-size=\"14px\"\r\n                    transform={calcText(d)}\r\n                    text-anchor=\"middle\"\r\n                >\r\n                    {d.data[1][0] === \"Framework-substantive, partial\"\r\n                        ? \"Partial\"\r\n                        : d.data[1][0] ===\r\n                            \"Framework-substantive, comprehensive\"\r\n                          ? \"Comprehensive\"\r\n                          : d.data[1][0]}\r\n                </text>\r\n            {/each}\r\n        </g>\r\n    </svg>\r\n</div>\r\n\r\n<style>\r\n    .wrapper {\r\n        height: 90vh;\r\n    }\r\n</style>\r\n",
    "<script>\r\n    import { onMount, onDestroy, createEventDispatcher } from \"svelte\";\r\n    import mapboxgl from \"mapbox-gl\";\r\n\r\n    const dispatch = createEventDispatcher();\r\n    export let mygeojson;\r\n\r\n    export let map;\r\n\r\n    onMount(() => {\r\n        mapboxgl.accessToken =\r\n            \"pk.eyJ1Ijoic2FzaGFnYXJpYmFsZHkiLCJhIjoiY2xyajRlczBlMDhqMTJpcXF3dHJhdTVsNyJ9.P_6mX_qbcbxLDS1o_SxpFg\";\r\n\r\n        map = new mapboxgl.Map({\r\n            container: map,\r\n            style: \"mapbox://styles/sashagaribaldy/cm0az6qe200pf01phd16v6qm0\",\r\n            center: [50.224518, 22.213995],\r\n            zoom: 2.5,\r\n            maxZoom: 5,\r\n        });\r\n        // console.log(map);\r\n\r\n        map.on(\"load\", () => {\r\n            map.addSource(\"countries\", {\r\n                type: \"geojson\",\r\n                data: mygeojson,\r\n                generateId: true, //This ensures that all features have unique IDs\r\n            });\r\n\r\n            map.addLayer({\r\n                id: \"countries-layer\",\r\n                type: \"fill\",\r\n                source: \"countries\",\r\n                paint: {\r\n                    \"fill-color\": {\r\n                        property: \"number\",\r\n                        // stops: [\r\n                        //   [1, \"#feda00\"],\r\n                        //   [100, \"red\"],\r\n                        //   [1000, \"#400000\"],\r\n                        // ],\r\n                        stops: [\r\n                            [1, \"#BEBEBE\"],\r\n                            [100, \"#989898\"],\r\n                            [1000, \"#484840\"],\r\n                        ],\r\n                    },\r\n                    \"fill-opacity\": [\r\n                        \"case\",\r\n                        [\"<\", [\"get\", \"number\"], 5],\r\n                        0,\r\n                        [\">=\", [\"get\", \"number\"], 5],\r\n                        1,\r\n                        1,\r\n                    ],\r\n                },\r\n            });\r\n\r\n            // Add outline layer\r\n            map.addLayer({\r\n                id: `borders`,\r\n                type: \"line\",\r\n                source: \"countries\",\r\n                paint: {\r\n                    \"line-color\": \"#000\",\r\n                    \"line-width\": [\r\n                        \"case\",\r\n                        [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n                        1.5,\r\n                        0,\r\n                    ],\r\n                },\r\n            });\r\n        });\r\n\r\n        dispatch(\"mapLoaded\");\r\n    });\r\n</script>\r\n\r\n<div id=\"map\" bind:this={map} style=\"width: 100%; height: 100vh;\"></div>\r\n\r\n<style>\r\n    div {\r\n        top: 0;\r\n        bottom: 0;\r\n    }\r\n    #map {\r\n        pointer-events: none;\r\n    }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}